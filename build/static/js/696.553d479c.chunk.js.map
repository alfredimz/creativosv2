{"version":3,"file":"static/js/696.553d479c.chunk.js","mappings":"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","sources":["pages/PersonalizarContenedor/PersonalizarContenedor.jsx","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Card, Form, Button, ProgressBar } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  FaHardHat, FaBolt, FaSnowflake, FaTint, FaPaintBrush,\r\n  FaBriefcase, FaToilet, FaWarehouse, FaUtensils, FaBed,\r\n  FaHamburger, FaSwimmingPool, FaCoffee, FaDumbbell, FaStethoscope,\r\n  FaStore, FaHome, FaChalkboardTeacher, FaFlask, FaTools,\r\n  FaShower, FaUserShield, FaBuilding, FaEllipsisH,\r\n  FaArrowRight, FaArrowLeft, FaCheck\r\n} from 'react-icons/fa';\r\nimport { SEO, seoConfig } from '../../components/SEO';\r\nimport './PersonalizarContenedor.scss';\r\n\r\nconst PersonalizarContenedor = () => {\r\n  const navigate = useNavigate();\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [config, setConfig] = useState({\r\n    // Paso 1: Tipo de uso\r\n    tipoUso: '',\r\n    // Paso 2: Tamaño\r\n    tamano: '',\r\n    // Paso 3: Personalización básica\r\n    color: '',\r\n    puertas: '',\r\n    ventanas: '',\r\n    // Paso 4: Servicios y acabados\r\n    electrico: false,\r\n    climatizacion: false,\r\n    plomeria: false,\r\n    aislamiento: false,\r\n    pisos: false,\r\n    acabadosInteriores: false\r\n  });\r\n\r\n  // PASO 1: 19 Tipos de Adecuación\r\n  const tiposUso = [\r\n    { id: 'oficinas', nombre: 'Oficinas', icon: FaBriefcase, descripcion: 'Espacios de trabajo equipados' },\r\n    { id: 'sanitarios', nombre: 'Sanitarios', icon: FaToilet, descripcion: 'Baños completos' },\r\n    { id: 'bodegas', nombre: 'Bodegas', icon: FaWarehouse, descripcion: 'Almacenamiento seguro' },\r\n    { id: 'comedores', nombre: 'Comedores', icon: FaUtensils, descripcion: 'Áreas de comedor' },\r\n    { id: 'dormitorios', nombre: 'Dormitorios', icon: FaBed, descripcion: 'Habitaciones equipadas' },\r\n    { id: 'fast-food', nombre: 'Fast Food', icon: FaHamburger, descripcion: 'Locales de comida rápida' },\r\n    { id: 'piscinas', nombre: 'Piscinas', icon: FaSwimmingPool, descripcion: 'Albercas modulares' },\r\n    { id: 'cafeterias', nombre: 'Cafeterías', icon: FaCoffee, descripcion: 'Locales de café' },\r\n    { id: 'gimnasios', nombre: 'Gimnasios', icon: FaDumbbell, descripcion: 'Espacios fitness' },\r\n    { id: 'consultorios', nombre: 'Consultorios Médicos', icon: FaStethoscope, descripcion: 'Clínicas y consultorios' },\r\n    { id: 'tiendas', nombre: 'Tiendas/Comercios', icon: FaStore, descripcion: 'Locales comerciales' },\r\n    { id: 'viviendas', nombre: 'Viviendas/Casas', icon: FaHome, descripcion: 'Casas modulares' },\r\n    { id: 'aulas', nombre: 'Aulas/Salones', icon: FaChalkboardTeacher, descripcion: 'Salones educativos' },\r\n    { id: 'laboratorios', nombre: 'Laboratorios', icon: FaFlask, descripcion: 'Labs equipados' },\r\n    { id: 'talleres', nombre: 'Talleres', icon: FaTools, descripcion: 'Espacios de trabajo técnico' },\r\n    { id: 'duchas', nombre: 'Duchas/Vestidores', icon: FaShower, descripcion: 'Vestidores con duchas' },\r\n    { id: 'casetas', nombre: 'Casetas de Vigilancia', icon: FaUserShield, descripcion: 'Puestos de seguridad' },\r\n    { id: 'departamentos', nombre: 'Mini Departamentos', icon: FaBuilding, descripcion: 'Departamentos compactos' },\r\n    { id: 'otros', nombre: 'Otros (Personalizado)', icon: FaEllipsisH, descripcion: 'Proyecto a medida' }\r\n  ];\r\n\r\n  // PASO 2: Tamaños\r\n  const tamanos = [\r\n    {\r\n      id: '10',\r\n      nombre: '10 pies',\r\n      medidas: '3m × 2.4m × 2.6m',\r\n      capacidad: '16.4 m³',\r\n      descripcion: 'Ideal para espacios compactos'\r\n    },\r\n    {\r\n      id: '20',\r\n      nombre: '20 pies',\r\n      medidas: '6m × 2.4m × 2.6m',\r\n      capacidad: '33.2 m³',\r\n      descripcion: 'Tamaño estándar más popular'\r\n    },\r\n    {\r\n      id: '40',\r\n      nombre: '40 pies',\r\n      medidas: '12m × 2.4m × 2.6m',\r\n      capacidad: '67.7 m³',\r\n      descripcion: 'Máximo espacio disponible'\r\n    }\r\n  ];\r\n\r\n  // PASO 3: Opciones de personalización básica\r\n  const colores = [\r\n    { id: 'blanco', nombre: 'Blanco', hex: '#FFFFFF' },\r\n    { id: 'gris', nombre: 'Gris', hex: '#7A8389' },\r\n    { id: 'azul', nombre: 'Azul', hex: '#2E5C8A' },\r\n    { id: 'verde', nombre: 'Verde', hex: '#2E7D32' },\r\n    { id: 'naranja', nombre: 'Naranja', hex: '#F16700' },\r\n    { id: 'personalizado', nombre: 'Personalizado', hex: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' }\r\n  ];\r\n\r\n  const opcionesPuertas = ['1 puerta', '2 puertas', '3+ puertas'];\r\n  const opcionesVentanas = ['Sin ventanas', '2 ventanas', '4 ventanas', '6+ ventanas'];\r\n\r\n  // Funciones de navegación\r\n  const nextStep = () => {\r\n    if (currentStep < 5) {\r\n      setCurrentStep(currentStep + 1);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const prevStep = () => {\r\n    if (currentStep > 1) {\r\n      setCurrentStep(currentStep - 1);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const canProceed = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return config.tipoUso !== '';\r\n      case 2:\r\n        return config.tamano !== '';\r\n      case 3:\r\n        return config.color !== '' && config.puertas !== '' && config.ventanas !== '';\r\n      case 4:\r\n        return true; // Los servicios son opcionales\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Construir resumen para enviar\r\n    const resumen = `\r\nPERSONALIZACIÓN DE CONTENEDOR\r\n\r\nTipo de Uso: ${tiposUso.find(t => t.id === config.tipoUso)?.nombre || 'No especificado'}\r\nTamaño: ${tamanos.find(t => t.id === config.tamano)?.nombre || 'No especificado'}\r\nColor: ${colores.find(c => c.id === config.color)?.nombre || 'No especificado'}\r\nPuertas: ${config.puertas}\r\nVentanas: ${config.ventanas}\r\n\r\nServicios Adicionales:\r\n${config.electrico ? '✓ Instalación Eléctrica' : ''}\r\n${config.climatizacion ? '✓ Climatización (AC)' : ''}\r\n${config.plomeria ? '✓ Plomería' : ''}\r\n${config.aislamiento ? '✓ Aislamiento Térmico' : ''}\r\n${config.pisos ? '✓ Pisos Especiales' : ''}\r\n${config.acabadosInteriores ? '✓ Acabados Interiores' : ''}\r\n    `.trim();\r\n\r\n    // Guardar en sessionStorage para pasarlo al formulario de contacto\r\n    sessionStorage.setItem('cotizacionPersonalizada', resumen);\r\n\r\n    // Redirigir a contacto\r\n    navigate('/contacto?tipo=personalizacion');\r\n  };\r\n\r\n  // Calcular progreso\r\n  const progress = (currentStep / 5) * 100;\r\n\r\n  return (\r\n    <div className=\"personalizar-page\">\r\n      <SEO {...seoConfig.personalizarContenedor} />\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"personalizar-hero\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={10}>\r\n              <h1 className=\"personalizar-hero__title\">Personaliza tu Contenedor</h1>\r\n              <p className=\"personalizar-hero__description\">\r\n                Diseña tu contenedor ideal en 5 pasos simples\r\n              </p>\r\n\r\n              {/* Progress Bar */}\r\n              <div className=\"personalizar-hero__progress\">\r\n                <ProgressBar\r\n                  now={progress}\r\n                  label={`Paso ${currentStep} de 5`}\r\n                  variant=\"dark\"\r\n                  className=\"mb-2\"\r\n                />\r\n                <div className=\"personalizar-hero__steps\">\r\n                  <span className={currentStep >= 1 ? 'active' : ''}>1. Uso</span>\r\n                  <span className={currentStep >= 2 ? 'active' : ''}>2. Tamaño</span>\r\n                  <span className={currentStep >= 3 ? 'active' : ''}>3. Básico</span>\r\n                  <span className={currentStep >= 4 ? 'active' : ''}>4. Servicios</span>\r\n                  <span className={currentStep >= 5 ? 'active' : ''}>5. Resumen</span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n\r\n      {/* Wizard Content */}\r\n      <section className=\"personalizar-wizard\">\r\n        <Container>\r\n\r\n          {/* PASO 1: Tipo de Uso */}\r\n          {currentStep === 1 && (\r\n            <div className=\"wizard-step wizard-step-1\">\r\n              <Row className=\"justify-content-center mb-4\">\r\n                <Col lg={10}>\r\n                  <h2 className=\"wizard-step__title\">¿Para qué usarás el contenedor?</h2>\r\n                  <p className=\"wizard-step__subtitle\">Selecciona el tipo de adecuación que necesitas</p>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                {tiposUso.map((tipo) => {\r\n                  const IconComponent = tipo.icon;\r\n                  return (\r\n                    <Col key={tipo.id} lg={3} md={4} sm={6} className=\"mb-4\">\r\n                      <Card\r\n                        className={`tipo-uso-card ${config.tipoUso === tipo.id ? 'selected' : ''}`}\r\n                        onClick={() => setConfig({...config, tipoUso: tipo.id})}\r\n                      >\r\n                        <Card.Body className=\"text-center\">\r\n                          <div className=\"tipo-uso-card__icon\">\r\n                            <IconComponent size={48} />\r\n                          </div>\r\n                          <h4 className=\"tipo-uso-card__nombre\">{tipo.nombre}</h4>\r\n                          <p className=\"tipo-uso-card__descripcion\">{tipo.descripcion}</p>\r\n                          {config.tipoUso === tipo.id && (\r\n                            <div className=\"tipo-uso-card__check\">\r\n                              <FaCheck />\r\n                            </div>\r\n                          )}\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {/* PASO 2: Tamaño */}\r\n          {currentStep === 2 && (\r\n            <div className=\"wizard-step wizard-step-2\">\r\n              <Row className=\"justify-content-center mb-4\">\r\n                <Col lg={10}>\r\n                  <h2 className=\"wizard-step__title\">¿Qué tamaño necesitas?</h2>\r\n                  <p className=\"wizard-step__subtitle\">Elige el tamaño del contenedor</p>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                {tamanos.map((tamano) => (\r\n                  <Col key={tamano.id} lg={4} md={6} className=\"mb-4\">\r\n                    <Card\r\n                      className={`tamano-card ${config.tamano === tamano.id ? 'selected' : ''}`}\r\n                      onClick={() => setConfig({...config, tamano: tamano.id})}\r\n                    >\r\n                      <Card.Body>\r\n                        <div className=\"tamano-card__header\">\r\n                          <h3 className=\"tamano-card__nombre\">{tamano.nombre}</h3>\r\n                          {config.tamano === tamano.id && (\r\n                            <div className=\"tamano-card__check\">\r\n                              <FaCheck />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"tamano-card__specs\">\r\n                          <p><strong>Medidas:</strong> {tamano.medidas}</p>\r\n                          <p><strong>Capacidad:</strong> {tamano.capacidad}</p>\r\n                          <p className=\"tamano-card__descripcion\">{tamano.descripcion}</p>\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {/* PASO 3: Personalización Básica */}\r\n          {currentStep === 3 && (\r\n            <div className=\"wizard-step wizard-step-3\">\r\n              <Row className=\"justify-content-center mb-4\">\r\n                <Col lg={10}>\r\n                  <h2 className=\"wizard-step__title\">Personalización Básica</h2>\r\n                  <p className=\"wizard-step__subtitle\">Define el aspecto exterior de tu contenedor</p>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg={8}>\r\n                  <Card className=\"personalizacion-card\">\r\n                    <Card.Body>\r\n                      {/* Color */}\r\n                      <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"personalizacion-label\">Color Exterior</Form.Label>\r\n                        <div className=\"color-selector\">\r\n                          {colores.map((color) => (\r\n                            <div\r\n                              key={color.id}\r\n                              className={`color-option ${config.color === color.id ? 'selected' : ''}`}\r\n                              style={{\r\n                                background: color.hex.includes('gradient') ? color.hex : color.hex,\r\n                                border: color.id === 'blanco' ? '2px solid #ddd' : 'none'\r\n                              }}\r\n                              onClick={() => setConfig({...config, color: color.id})}\r\n                              title={color.nombre}\r\n                            >\r\n                              {config.color === color.id && (\r\n                                <FaCheck color={color.id === 'blanco' ? '#000' : '#fff'} />\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <small className=\"text-muted\">Color seleccionado: {colores.find(c => c.id === config.color)?.nombre || 'Ninguno'}</small>\r\n                      </Form.Group>\r\n\r\n                      {/* Puertas */}\r\n                      <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"personalizacion-label\">Número de Puertas</Form.Label>\r\n                        <Form.Select\r\n                          value={config.puertas}\r\n                          onChange={(e) => setConfig({...config, puertas: e.target.value})}\r\n                        >\r\n                          <option value=\"\">Selecciona...</option>\r\n                          {opcionesPuertas.map((opcion, index) => (\r\n                            <option key={index} value={opcion}>{opcion}</option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n\r\n                      {/* Ventanas */}\r\n                      <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"personalizacion-label\">Ventanas</Form.Label>\r\n                        <Form.Select\r\n                          value={config.ventanas}\r\n                          onChange={(e) => setConfig({...config, ventanas: e.target.value})}\r\n                        >\r\n                          <option value=\"\">Selecciona...</option>\r\n                          {opcionesVentanas.map((opcion, index) => (\r\n                            <option key={index} value={opcion}>{opcion}</option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {/* PASO 4: Servicios y Acabados */}\r\n          {currentStep === 4 && (\r\n            <div className=\"wizard-step wizard-step-4\">\r\n              <Row className=\"justify-content-center mb-4\">\r\n                <Col lg={10}>\r\n                  <h2 className=\"wizard-step__title\">Servicios y Acabados</h2>\r\n                  <p className=\"wizard-step__subtitle\">Selecciona los servicios adicionales que necesites (opcional)</p>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg={8}>\r\n                  <Card className=\"servicios-card\">\r\n                    <Card.Body>\r\n                      <Row>\r\n                        <Col md={6} className=\"mb-3\">\r\n                          <div className=\"servicio-item\">\r\n                            <div className=\"servicio-item__header\">\r\n                              <FaBolt size={32} color=\"#F16700\" />\r\n                              <div>\r\n                                <h5>Instalación Eléctrica</h5>\r\n                                <p>Cableado completo y tomas de corriente</p>\r\n                              </div>\r\n                            </div>\r\n                            <Form.Check\r\n                              type=\"switch\"\r\n                              checked={config.electrico}\r\n                              onChange={(e) => setConfig({...config, electrico: e.target.checked})}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n\r\n                        <Col md={6} className=\"mb-3\">\r\n                          <div className=\"servicio-item\">\r\n                            <div className=\"servicio-item__header\">\r\n                              <FaSnowflake size={32} color=\"#00BCD4\" />\r\n                              <div>\r\n                                <h5>Climatización</h5>\r\n                                <p>Aire acondicionado y calefacción</p>\r\n                              </div>\r\n                            </div>\r\n                            <Form.Check\r\n                              type=\"switch\"\r\n                              checked={config.climatizacion}\r\n                              onChange={(e) => setConfig({...config, climatizacion: e.target.checked})}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n\r\n                        <Col md={6} className=\"mb-3\">\r\n                          <div className=\"servicio-item\">\r\n                            <div className=\"servicio-item__header\">\r\n                              <FaTint size={32} color=\"#2196F3\" />\r\n                              <div>\r\n                                <h5>Plomería</h5>\r\n                                <p>Instalaciones hidráulicas completas</p>\r\n                              </div>\r\n                            </div>\r\n                            <Form.Check\r\n                              type=\"switch\"\r\n                              checked={config.plomeria}\r\n                              onChange={(e) => setConfig({...config, plomeria: e.target.checked})}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n\r\n                        <Col md={6} className=\"mb-3\">\r\n                          <div className=\"servicio-item\">\r\n                            <div className=\"servicio-item__header\">\r\n                              <FaHardHat size={32} color=\"#3B6F7F\" />\r\n                              <div>\r\n                                <h5>Aislamiento Térmico</h5>\r\n                                <p>Aislamiento para temperatura</p>\r\n                              </div>\r\n                            </div>\r\n                            <Form.Check\r\n                              type=\"switch\"\r\n                              checked={config.aislamiento}\r\n                              onChange={(e) => setConfig({...config, aislamiento: e.target.checked})}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n\r\n                        <Col md={6} className=\"mb-3\">\r\n                          <div className=\"servicio-item\">\r\n                            <div className=\"servicio-item__header\">\r\n                              <FaTools size={32} color=\"#841C03\" />\r\n                              <div>\r\n                                <h5>Pisos Especiales</h5>\r\n                                <p>Pisos de madera, vinil o cerámicos</p>\r\n                              </div>\r\n                            </div>\r\n                            <Form.Check\r\n                              type=\"switch\"\r\n                              checked={config.pisos}\r\n                              onChange={(e) => setConfig({...config, pisos: e.target.checked})}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n\r\n                        <Col md={6} className=\"mb-3\">\r\n                          <div className=\"servicio-item\">\r\n                            <div className=\"servicio-item__header\">\r\n                              <FaPaintBrush size={32} color=\"#9C27B0\" />\r\n                              <div>\r\n                                <h5>Acabados Interiores</h5>\r\n                                <p>Pintura y acabados personalizados</p>\r\n                              </div>\r\n                            </div>\r\n                            <Form.Check\r\n                              type=\"switch\"\r\n                              checked={config.acabadosInteriores}\r\n                              onChange={(e) => setConfig({...config, acabadosInteriores: e.target.checked})}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {/* PASO 5: Resumen */}\r\n          {currentStep === 5 && (\r\n            <div className=\"wizard-step wizard-step-5\">\r\n              <Row className=\"justify-content-center mb-4\">\r\n                <Col lg={10}>\r\n                  <h2 className=\"wizard-step__title\">Resumen de tu Personalización</h2>\r\n                  <p className=\"wizard-step__subtitle\">Revisa tu configuración antes de solicitar la cotización</p>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg={8}>\r\n                  <Card className=\"resumen-card\">\r\n                    <Card.Body>\r\n                      <div className=\"resumen-section\">\r\n                        <h4>Tipo de Uso</h4>\r\n                        <p className=\"resumen-value\">\r\n                          {tiposUso.find(t => t.id === config.tipoUso)?.nombre || 'No especificado'}\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"resumen-section\">\r\n                        <h4>Tamaño</h4>\r\n                        <p className=\"resumen-value\">\r\n                          {tamanos.find(t => t.id === config.tamano)?.nombre || 'No especificado'} - {tamanos.find(t => t.id === config.tamano)?.medidas}\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"resumen-section\">\r\n                        <h4>Personalización Básica</h4>\r\n                        <ul>\r\n                          <li><strong>Color:</strong> {colores.find(c => c.id === config.color)?.nombre}</li>\r\n                          <li><strong>Puertas:</strong> {config.puertas}</li>\r\n                          <li><strong>Ventanas:</strong> {config.ventanas}</li>\r\n                        </ul>\r\n                      </div>\r\n\r\n                      <div className=\"resumen-section\">\r\n                        <h4>Servicios Adicionales</h4>\r\n                        {[config.electrico, config.climatizacion, config.plomeria, config.aislamiento, config.pisos, config.acabadosInteriores].some(Boolean) ? (\r\n                          <ul>\r\n                            {config.electrico && <li>Instalación Eléctrica</li>}\r\n                            {config.climatizacion && <li>Climatización (AC)</li>}\r\n                            {config.plomeria && <li>Plomería</li>}\r\n                            {config.aislamiento && <li>Aislamiento Térmico</li>}\r\n                            {config.pisos && <li>Pisos Especiales</li>}\r\n                            {config.acabadosInteriores && <li>Acabados Interiores</li>}\r\n                          </ul>\r\n                        ) : (\r\n                          <p className=\"resumen-value text-muted\">Ninguno seleccionado</p>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"resumen-cta\">\r\n                        <p className=\"resumen-cta__text\">\r\n                          ¿Todo listo? Solicita una cotización personalizada para tu contenedor\r\n                        </p>\r\n                        <Button\r\n                          variant=\"dark\"\r\n                          size=\"lg\"\r\n                          className=\"w-100 resumen-cta__button\"\r\n                          onClick={handleSubmit}\r\n                        >\r\n                          <FaCheck className=\"me-2\" />\r\n                          Solicitar Cotización Personalizada\r\n                        </Button>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {/* Navigation Buttons */}\r\n          <Row className=\"justify-content-center mt-5\">\r\n            <Col lg={8}>\r\n              <div className=\"wizard-navigation\">\r\n                {currentStep > 1 && (\r\n                  <Button\r\n                    variant=\"outline-dark\"\r\n                    onClick={prevStep}\r\n                    className=\"wizard-navigation__prev\"\r\n                  >\r\n                    <FaArrowLeft className=\"me-2\" />\r\n                    Anterior\r\n                  </Button>\r\n                )}\r\n\r\n                {currentStep < 5 && (\r\n                  <Button\r\n                    variant=\"dark\"\r\n                    onClick={nextStep}\r\n                    disabled={!canProceed()}\r\n                    className=\"wizard-navigation__next\"\r\n                  >\r\n                    Siguiente\r\n                    <FaArrowRight className=\"ms-2\" />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Container>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalizarContenedor;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["PersonalizarContenedor","_colores$find2","_tiposUso$find2","_tamanos$find2","_tamanos$find3","_colores$find3","navigate","useNavigate","currentStep","setCurrentStep","useState","config","setConfig","tipoUso","tamano","color","puertas","ventanas","electrico","climatizacion","plomeria","aislamiento","pisos","acabadosInteriores","tiposUso","id","nombre","icon","FaBriefcase","descripcion","FaToilet","FaWarehouse","FaUtensils","FaBed","FaHamburger","FaSwimmingPool","FaCoffee","FaDumbbell","FaStethoscope","FaStore","FaHome","FaChalkboardTeacher","FaFlask","FaTools","FaShower","FaUserShield","FaBuilding","FaEllipsisH","tamanos","medidas","capacidad","colores","hex","progress","_jsxs","className","children","_jsx","SEO","_objectSpread","seoConfig","personalizarContenedor","Container","Row","Col","lg","ProgressBar","now","label","concat","variant","map","tipo","IconComponent","md","sm","Card","onClick","Body","size","FaCheck","Form","Group","Label","style","background","includes","border","title","find","c","Select","value","onChange","e","target","opcion","index","FaBolt","Check","type","checked","FaSnowflake","FaTint","FaHardHat","FaPaintBrush","t","some","Boolean","Button","handleSubmit","_tiposUso$find","_tamanos$find","_colores$find","resumen","trim","sessionStorage","setItem","prevStep","window","scrollTo","top","behavior","FaArrowLeft","nextStep","disabled","canProceed","FaArrowRight","_excluded","_excluded2","_excluded3","getPercentage","min","max","percentage","Math","round","renderProgressBar","_ref","ref","visuallyHidden","striped","animated","bsPrefix","props","_objectWithoutProperties","role","classNames","width","React","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","child","cloneElement","displayName"],"sourceRoot":""}