{"version":3,"file":"static/js/233.ad17d413.chunk.js","mappings":"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","sources":["pages/CotizadorRenta/CotizadorRenta.jsx","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport emailjs from '@emailjs/browser';\nimport { SEO, seoConfig } from '../../components/SEO';\nimport { ErrorMessage, LoadingSpinner } from '../../components/Accessibility';\nimport './CotizadorRenta.scss';\n\nconst CotizadorRenta = () => {\n  const [formData, setFormData] = useState({\n    nombre: '',\n    empresa: '',\n    email: '',\n    telefono: '',\n    tamanoContenedor: '20',\n    cantidad: 1,\n    duracionRenta: '1',\n    transporte: false,\n    origen: '',\n    destino: '',\n    maniobras: false,\n    comentarios: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(null);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n\n    try {\n      // EmailJS configuration\n      // TODO: Replace with actual EmailJS credentials after account setup\n      const serviceID = 'YOUR_SERVICE_ID'; // Replace with actual service ID\n      const templateID = 'YOUR_TEMPLATE_ID'; // Replace with actual template ID\n      const publicKey = 'YOUR_PUBLIC_KEY'; // Replace with actual public key\n\n      const templateParams = {\n        to_email: 'ventas@creativosespacios.mx',\n        from_name: formData.nombre,\n        from_email: formData.email,\n        empresa: formData.empresa,\n        telefono: formData.telefono,\n        tamano_contenedor: formData.tamanoContenedor,\n        cantidad: formData.cantidad,\n        duracion_renta: formData.duracionRenta,\n        transporte: formData.transporte ? 'Sí' : 'No',\n        origen: formData.origen,\n        destino: formData.destino,\n        maniobras: formData.maniobras ? 'Sí' : 'No',\n        comentarios: formData.comentarios,\n        reply_to: formData.email\n      };\n\n      await emailjs.send(serviceID, templateID, templateParams, publicKey);\n\n      // Google Ads conversion tracking\n      if (window.gtag) {\n        window.gtag('event', 'conversion', {\n          'send_to': 'AW-11471696489/sTNfCMWcgbMZEOnkkN4q',\n          'event_category': 'Form',\n          'event_label': 'CotizadorRenta Form Submission',\n          'value': 1.0,\n          'currency': 'MXN'\n        });\n      }\n\n      setSubmitStatus('success');\n      setFormData({\n        nombre: '',\n        empresa: '',\n        email: '',\n        telefono: '',\n        tamanoContenedor: '20',\n        cantidad: 1,\n        duracionRenta: '1',\n        transporte: false,\n        origen: '',\n        destino: '',\n        maniobras: false,\n        comentarios: ''\n      });\n    } catch (error) {\n      console.error('Error al enviar formulario:', error);\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"cotizador-page\">\n      <SEO {...seoConfig.cotizadorRenta} />\n\n      {/* Hero Section */}\n      <section className=\"cotizador-hero\">\n        <Container>\n          <h1 className=\"cotizador-hero__title\">Cotizador de Renta</h1>\n          <p className=\"cotizador-hero__description\">\n            Completa el formulario para obtener una cotización detallada para la renta de tus contenedores.\n            Renta flexible desde 1 mes, con transporte y servicios adicionales disponibles.\n          </p>\n        </Container>\n      </section>\n\n      {/* Form Section */}\n      <section className=\"cotizador-form\">\n        <Container>\n          <Form onSubmit={handleSubmit} aria-label=\"Formulario de cotización de renta\">\n            {submitStatus === 'success' && (\n              <ErrorMessage\n                type=\"success\"\n                message=\"¡Formulario enviado correctamente! Nos pondremos en contacto contigo pronto.\"\n                className=\"mb-3\"\n              />\n            )}\n            {submitStatus === 'error' && (\n              <ErrorMessage\n                type=\"error\"\n                message=\"Error al enviar el formulario. Por favor intenta nuevamente o contáctanos directamente.\"\n                className=\"mb-3\"\n              />\n            )}\n\n            <h3 className=\"cotizador-form__section-title\">1. Datos de Contacto</h3>\n            <Row>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-nombre\">\n                  <Form.Label className=\"cotizador-form__label\">\n                    Nombre Completo <span aria-label=\"campo requerido\">*</span>\n                  </Form.Label>\n                  <Form.Control\n                    className=\"cotizador-form__input\"\n                    type=\"text\"\n                    name=\"nombre\"\n                    value={formData.nombre}\n                    onChange={handleChange}\n                    required\n                    disabled={isSubmitting}\n                    aria-required=\"true\"\n                    aria-label=\"Ingrese su nombre completo\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-email\">\n                  <Form.Label className=\"cotizador-form__label\">\n                    Email <span aria-label=\"campo requerido\">*</span>\n                  </Form.Label>\n                  <Form.Control\n                    className=\"cotizador-form__input\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    disabled={isSubmitting}\n                    aria-required=\"true\"\n                    aria-label=\"Ingrese su correo electrónico\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-telefono\">\n                  <Form.Label className=\"cotizador-form__label\">\n                    Teléfono <span aria-label=\"campo requerido\">*</span>\n                  </Form.Label>\n                  <Form.Control\n                    className=\"cotizador-form__input\"\n                    type=\"tel\"\n                    name=\"telefono\"\n                    value={formData.telefono}\n                    onChange={handleChange}\n                    required\n                    disabled={isSubmitting}\n                    aria-required=\"true\"\n                    aria-label=\"Ingrese su número de teléfono\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={6}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-empresa\">\n                  <Form.Label className=\"cotizador-form__label\">Empresa (Opcional)</Form.Label>\n                  <Form.Control\n                    className=\"cotizador-form__input\"\n                    type=\"text\"\n                    name=\"empresa\"\n                    value={formData.empresa}\n                    onChange={handleChange}\n                    disabled={isSubmitting}\n                    aria-label=\"Ingrese el nombre de su empresa (opcional)\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <hr className=\"cotizador-form__divider\" />\n\n            <h3 className=\"cotizador-form__section-title\">2. Detalles de la Renta</h3>\n            <Row>\n              <Col md={4}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-tamano\">\n                  <Form.Label className=\"cotizador-form__label\">Tamaño de Contenedor</Form.Label>\n                  <Form.Select\n                    className=\"cotizador-form__input\"\n                    name=\"tamanoContenedor\"\n                    value={formData.tamanoContenedor}\n                    onChange={handleChange}\n                    disabled={isSubmitting}\n                    aria-label=\"Seleccione el tamaño del contenedor\"\n                  >\n                    <option value=\"10\">10 pies</option>\n                    <option value=\"20\">20 pies</option>\n                    <option value=\"40\">40 pies</option>\n                  </Form.Select>\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-cantidad\">\n                  <Form.Label className=\"cotizador-form__label\">Cantidad</Form.Label>\n                  <Form.Control\n                    className=\"cotizador-form__input\"\n                    type=\"number\"\n                    name=\"cantidad\"\n                    value={formData.cantidad}\n                    onChange={handleChange}\n                    min=\"1\"\n                    disabled={isSubmitting}\n                    aria-label=\"Ingrese la cantidad de contenedores\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-duracion\">\n                  <Form.Label className=\"cotizador-form__label\">Duración (meses)</Form.Label>\n                  <Form.Control\n                    className=\"cotizador-form__input\"\n                    type=\"number\"\n                    name=\"duracionRenta\"\n                    value={formData.duracionRenta}\n                    onChange={handleChange}\n                    min=\"1\"\n                    disabled={isSubmitting}\n                    aria-label=\"Ingrese la duración de la renta en meses\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <hr className=\"cotizador-form__divider\" />\n\n            <h3 className=\"cotizador-form__section-title\">3. Servicios Adicionales</h3>\n            <Row>\n              <Col md={12}>\n                <Form.Group className=\"mb-3\" controlId=\"cotizador-renta-transporte\">\n                  <Form.Check\n                    type=\"switch\"\n                    id=\"transporte-switch-renta\"\n                    name=\"transporte\"\n                    label=\"¿Necesitas transporte (flete redondo)?\"\n                    checked={formData.transporte}\n                    onChange={handleChange}\n                    disabled={isSubmitting}\n                    aria-label=\"Indicar si necesita servicio de transporte\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            {formData.transporte && (\n              <Row className=\"mb-3\">\n                <Col md={6}>\n                  <Form.Group controlId=\"cotizador-renta-origen\">\n                    <Form.Label className=\"cotizador-form__label\">Ciudad de Origen</Form.Label>\n                    <Form.Control\n                      className=\"cotizador-form__input\"\n                      type=\"text\"\n                      name=\"origen\"\n                      value={formData.origen}\n                      onChange={handleChange}\n                      placeholder=\"Ej. Patio CDMX\"\n                      disabled={isSubmitting}\n                      aria-label=\"Ingrese la ciudad de origen para el transporte\"\n                    />\n                  </Form.Group>\n                </Col>\n                <Col md={6}>\n                  <Form.Group controlId=\"cotizador-renta-destino\">\n                    <Form.Label className=\"cotizador-form__label\">Ciudad de Destino</Form.Label>\n                    <Form.Control\n                      className=\"cotizador-form__input\"\n                      type=\"text\"\n                      name=\"destino\"\n                      value={formData.destino}\n                      onChange={handleChange}\n                      placeholder=\"Ej. Puebla\"\n                      disabled={isSubmitting}\n                      aria-label=\"Ingrese la ciudad de destino para el transporte\"\n                    />\n                  </Form.Group>\n                </Col>\n              </Row>\n            )}\n            <Form.Group className=\"mb-4\" controlId=\"cotizador-renta-maniobras\">\n              <Form.Check\n                type=\"switch\"\n                id=\"maniobras-switch-renta\"\n                name=\"maniobras\"\n                label=\"¿Necesitas maniobras de carga y descarga?\"\n                checked={formData.maniobras}\n                onChange={handleChange}\n                disabled={isSubmitting}\n                aria-label=\"Indicar si necesita servicio de maniobras de carga y descarga\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-4\" controlId=\"cotizador-renta-comentarios\">\n              <Form.Label className=\"cotizador-form__label\">Comentarios Adicionales</Form.Label>\n              <Form.Control\n                className=\"cotizador-form__input\"\n                as=\"textarea\"\n                rows={4}\n                name=\"comentarios\"\n                value={formData.comentarios}\n                onChange={handleChange}\n                placeholder=\"Describe cualquier otro requerimiento para tu proyecto...\"\n                disabled={isSubmitting}\n                aria-label=\"Ingrese comentarios adicionales sobre su cotización de renta\"\n              />\n            </Form.Group>\n\n            <div className=\"text-center\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                size=\"lg\"\n                disabled={isSubmitting}\n                aria-label=\"Enviar solicitud de cotización de renta\"\n              >\n                {isSubmitting ? 'Enviando...' : 'Solicitar Cotización de Renta'}\n              </Button>\n              {isSubmitting && (\n                <div className=\"mt-2\">\n                  <LoadingSpinner message=\"Enviando cotización...\" size=\"sm\" />\n                </div>\n              )}\n            </div>\n          </Form>\n        </Container>\n      </section>\n    </div>\n  );\n};\n\nexport default CotizadorRenta;\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n"],"names":["CotizadorRenta","formData","setFormData","useState","nombre","empresa","email","telefono","tamanoContenedor","cantidad","duracionRenta","transporte","origen","destino","maniobras","comentarios","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleChange","e","name","value","type","checked","target","_objectSpread","_jsxs","className","children","_jsx","SEO","seoConfig","cotizadorRenta","Container","Form","onSubmit","async","preventDefault","serviceID","templateID","publicKey","templateParams","to_email","from_name","from_email","tamano_contenedor","duracion_renta","reply_to","emailjs","window","gtag","error","console","ErrorMessage","message","Row","Col","md","Group","controlId","Label","Control","onChange","required","disabled","Select","min","Check","id","label","placeholder","as","rows","Button","variant","size","LoadingSpinner","EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","setItem","remove","removeItem","buildOptions","options","toString","sendPost","url","data","headers","response","fetch","method","body","responseStatus","ok","validateParams","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","_options$list","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","init","opts","blockList","limitRate","send","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","append"],"sourceRoot":""}