{"version":3,"file":"static/js/991.6058c465.chunk.js","mappings":"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","sources":["pages/PerfiladorCliente/PerfiladorCliente.jsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Card, ProgressBar } from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FaBullseye, FaBolt, FaMoneyBillWave } from 'react-icons/fa'; // FASE 4: Reemplazo de emojis\r\nimport { SEO, seoConfig } from '../../components/SEO';\r\nimport { determinarNivelPorRespuestas, setUserLevel, getNombreNivel } from '../../utils/userLevel';\r\nimport './PerfiladorCliente.scss';\r\n\r\nconst PerfiladorCliente = () => {\r\n  const [paso, setPaso] = useState(1);\r\n  const [respuestas, setRespuestas] = useState({});\r\n  const [nivelSugerido, setNivelSugerido] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const preguntas = [\r\n    {\r\n      id: 1,\r\n      pregunta: '¿Cuál es el uso principal que le darás al contenedor?',\r\n      opciones: ['Oficina', 'Vivienda', 'Comercial', 'Almacenamiento', 'Otro']\r\n    },\r\n    {\r\n      id: 2,\r\n      pregunta: '¿Qué tamaño de contenedor necesitas?',\r\n      opciones: ['10 pies', '20 pies', '40 pies', 'No estoy seguro']\r\n    },\r\n    {\r\n      id: 3,\r\n      pregunta: '¿Prefieres comprar o rentar?',\r\n      opciones: ['Comprar', 'Rentar', 'No estoy seguro']\r\n    },\r\n    {\r\n      id: 4,\r\n      pregunta: '¿Necesitas modificaciones especiales?',\r\n      opciones: ['Sí, muchas modificaciones', 'Algunas modificaciones', 'Modificaciones mínimas', 'Sin modificaciones']\r\n    },\r\n    {\r\n      id: 5,\r\n      pregunta: '¿Cuál es tu presupuesto aproximado?',\r\n      opciones: ['Menos de $50,000', '$50,000 - $100,000', '$100,000 - $200,000', 'Más de $200,000']\r\n    }\r\n  ];\r\n\r\n  const handleRespuesta = (opcion) => {\r\n    const nuevasRespuestas = { ...respuestas, [paso]: opcion };\r\n    setRespuestas(nuevasRespuestas);\r\n\r\n    if (paso < preguntas.length) {\r\n      setPaso(paso + 1);\r\n    } else {\r\n      // Última pregunta: determinar nivel\r\n      const nivel = determinarNivelPorRespuestas(nuevasRespuestas);\r\n      setNivelSugerido(nivel);\r\n    }\r\n  };\r\n\r\n  const reiniciar = () => {\r\n    setPaso(1);\r\n    setRespuestas({});\r\n    setNivelSugerido(null);\r\n  };\r\n\r\n  const handleFinalizarPerfilador = () => {\r\n    if (nivelSugerido) {\r\n      // Guardar nivel en localStorage\r\n      setUserLevel(nivelSugerido);\r\n\r\n      // Redirigir a home después de un breve delay\r\n      setTimeout(() => {\r\n        navigate('/');\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  const progreso = (paso / preguntas.length) * 100;\r\n\r\n  return (\r\n    <div className=\"perfilador-page\">\r\n      <SEO {...seoConfig.perfiladorCliente} />\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"perfilador-hero\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={8}>\r\n              <h1 className=\"perfilador-hero__title\">Perfilador de Cliente</h1>\r\n              <p className=\"perfilador-hero__description\">\r\n                Responde 5 preguntas y te ayudaremos a encontrar la solución perfecta\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n\r\n      {/* Quiz Section */}\r\n      <section className=\"perfilador-quiz\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={8}>\r\n              <Card className=\"perfilador-quiz__card\">\r\n                <Card.Body>\r\n                  {paso <= preguntas.length ? (\r\n                    <>\r\n                      <div className=\"perfilador-quiz__progreso-container\">\r\n                        <div className=\"perfilador-quiz__progreso-numero\">\r\n                          Pregunta {paso} de {preguntas.length}\r\n                        </div>\r\n                        <ProgressBar now={progreso} className=\"perfilador-quiz__progreso-bar\" />\r\n                      </div>\r\n\r\n                      <h2 className=\"perfilador-quiz__pregunta\">\r\n                        {preguntas[paso - 1].pregunta}\r\n                      </h2>\r\n\r\n                      <div className=\"perfilador-quiz__opciones\">\r\n                        {preguntas[paso - 1].opciones.map((opcion, index) => (\r\n                          <button\r\n                            key={index}\r\n                            className=\"perfilador-quiz__opcion\"\r\n                            onClick={() => handleRespuesta(opcion)}\r\n                          >\r\n                            {opcion}\r\n                          </button>\r\n                        ))}\r\n                      </div>\r\n\r\n                      {paso > 1 && (\r\n                        <button\r\n                          className=\"perfilador-quiz__back-button\"\r\n                          onClick={() => setPaso(paso - 1)}\r\n                        >\r\n                          ← Pregunta anterior\r\n                        </button>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"perfilador-quiz__resultado\">\r\n                      <div className=\"perfilador-quiz__resultado-icon\">✓</div>\r\n                      <h2 className=\"perfilador-quiz__resultado-titulo\">¡Perfil Completado!</h2>\r\n                      <p className=\"perfilador-quiz__resultado-texto\">\r\n                        Gracias por completar el perfilador. Basándonos en tus respuestas,\r\n                        hemos personalizado la experiencia perfecta para ti.\r\n                      </p>\r\n\r\n                      {nivelSugerido && (\r\n                        <div className=\"perfilador-quiz__nivel-sugerido\">\r\n                          <h3 className=\"perfilador-quiz__nivel-titulo\">Tu Nivel Sugerido:</h3>\r\n                          <div className=\"perfilador-quiz__nivel-badge\">\r\n                            {getNombreNivel(nivelSugerido)}\r\n                          </div>\r\n                          <p className=\"perfilador-quiz__nivel-descripcion\">\r\n                            Hemos configurado el contenido del sitio especialmente para tu nivel de experiencia.\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"perfilador-quiz__resumen\">\r\n                        <h3 className=\"perfilador-quiz__resumen-titulo\">Tus respuestas:</h3>\r\n                        {Object.entries(respuestas).map(([key, value]) => (\r\n                          <div key={key} className=\"perfilador-quiz__resumen-item\">\r\n                            <strong className=\"perfilador-quiz__resumen-pregunta\">{preguntas[key - 1].pregunta}</strong>\r\n                            <p className=\"perfilador-quiz__resumen-respuesta\">{value}</p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n\r\n                      <div className=\"perfilador-quiz__acciones\">\r\n                        <button\r\n                          onClick={handleFinalizarPerfilador}\r\n                          className=\"perfilador-quiz__accion-button perfilador-quiz__accion-button--primary\"\r\n                        >\r\n                          Ver Mi Home Personalizado\r\n                        </button>\r\n                        <Link to=\"/contacto\" className=\"perfilador-quiz__accion-button perfilador-quiz__accion-button--secondary\">\r\n                          Solicitar Asesoría\r\n                        </Link>\r\n                        <button\r\n                          onClick={reiniciar}\r\n                          className=\"perfilador-quiz__accion-button perfilador-quiz__accion-button--tertiary\"\r\n                        >\r\n                          Reiniciar Perfilador\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n\r\n      {/* Beneficios Section */}\r\n      <section className=\"perfilador-beneficios\">\r\n        <Container>\r\n          <Row className=\"justify-content-center mb-4\">\r\n            <Col lg={10} className=\"text-center\">\r\n              <h2 className=\"perfilador-beneficios__titulo\">¿Por Qué Usar el Perfilador?</h2>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={4} className=\"text-center mb-4\">\r\n              <div className=\"perfilador-beneficios__card\">\r\n                <div className=\"perfilador-beneficios__card-icon\">\r\n                  <FaBullseye size={48} color=\"#3B6F7F\" />\r\n                </div>\r\n                <h3 className=\"perfilador-beneficios__card-titulo\">Solución Precisa</h3>\r\n                <p className=\"perfilador-beneficios__card-texto\">Identifica exactamente qué tipo de contenedor necesitas</p>\r\n              </div>\r\n            </Col>\r\n            <Col md={4} className=\"text-center mb-4\">\r\n              <div className=\"perfilador-beneficios__card\">\r\n                <div className=\"perfilador-beneficios__card-icon\">\r\n                  <FaBolt size={48} color=\"#F16700\" />\r\n                </div>\r\n                <h3 className=\"perfilador-beneficios__card-titulo\">Proceso Rápido</h3>\r\n                <p className=\"perfilador-beneficios__card-texto\">Solo 5 preguntas para obtener una recomendación personalizada</p>\r\n              </div>\r\n            </Col>\r\n            <Col md={4} className=\"text-center mb-4\">\r\n              <div className=\"perfilador-beneficios__card\">\r\n                <div className=\"perfilador-beneficios__card-icon\">\r\n                  <FaMoneyBillWave size={48} color=\"#3B6F7F\" />\r\n                </div>\r\n                <h3 className=\"perfilador-beneficios__card-titulo\">Ahorra Tiempo</h3>\r\n                <p className=\"perfilador-beneficios__card-texto\">Evita cotizaciones innecesarias, directo a lo que necesitas</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerfiladorCliente;\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["PerfiladorCliente","paso","setPaso","useState","respuestas","setRespuestas","nivelSugerido","setNivelSugerido","navigate","useNavigate","preguntas","id","pregunta","opciones","progreso","length","_jsxs","className","children","_jsx","SEO","_objectSpread","seoConfig","perfiladorCliente","Container","Row","Col","lg","Card","Body","_Fragment","ProgressBar","now","map","opcion","index","onClick","nuevasRespuestas","nivel","determinarNivelPorRespuestas","handleRespuesta","getNombreNivel","Object","entries","_ref","key","value","handleFinalizarPerfilador","setUserLevel","setTimeout","Link","to","reiniciar","md","FaBullseye","size","color","FaBolt","FaMoneyBillWave","func","React","child","hasChildOfType","type","toArray","some","_excluded","_excluded2","_excluded3","getPercentage","min","max","percentage","Math","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","style","variant","bsPrefix","props","_objectWithoutProperties","role","classNames","concat","width","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","cloneElement","displayName"],"sourceRoot":""}