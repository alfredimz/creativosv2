{"version":3,"file":"static/js/899.6c1c8983.chunk.js","mappings":"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","sources":["pages/QuejasSugerencias/QuejasSugerencias.jsx","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport emailjs from '@emailjs/browser';\r\nimport { SEO, seoConfig } from '../../components/SEO';\r\nimport { ErrorMessage, LoadingSpinner } from '../../components/Accessibility';\r\nimport './QuejasSugerencias.scss';\r\n\r\nconst QuejasSugerencias = () => {\r\n  const [formData, setFormData] = useState({\r\n    tipo: 'sugerencia',\r\n    nombre: '',\r\n    email: '',\r\n    telefono: '',\r\n    asunto: '',\r\n    mensaje: ''\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setSubmitStatus(null);\r\n\r\n    try {\r\n      // EmailJS configuration\r\n      // TODO: Replace with actual EmailJS credentials after account setup\r\n      const serviceID = 'YOUR_SERVICE_ID'; // Replace with actual service ID\r\n      const templateID = 'YOUR_TEMPLATE_ID'; // Replace with actual template ID\r\n      const publicKey = 'YOUR_PUBLIC_KEY'; // Replace with actual public key\r\n\r\n      const templateParams = {\r\n        to_email: 'ventas@creativosespacios.mx',\r\n        tipo_mensaje: formData.tipo,\r\n        from_name: formData.nombre,\r\n        from_email: formData.email,\r\n        telefono: formData.telefono,\r\n        subject: formData.asunto,\r\n        message: formData.mensaje,\r\n        reply_to: formData.email\r\n      };\r\n\r\n      await emailjs.send(serviceID, templateID, templateParams, publicKey);\r\n\r\n      // Google Ads conversion tracking\r\n      if (window.gtag) {\r\n        window.gtag('event', 'conversion', {\r\n          'send_to': 'AW-11471696489/sTNfCMWcgbMZEOnkkN4q',\r\n          'event_category': 'Form',\r\n          'event_label': 'QuejasSugerencias Form Submission',\r\n          'value': 1.0,\r\n          'currency': 'MXN'\r\n        });\r\n      }\r\n\r\n      setSubmitStatus('success');\r\n      setFormData({\r\n        tipo: 'sugerencia',\r\n        nombre: '',\r\n        email: '',\r\n        telefono: '',\r\n        asunto: '',\r\n        mensaje: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al enviar formulario:', error);\r\n      setSubmitStatus('error');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quejas-page\">\r\n      <SEO {...seoConfig.quejasSugerencias} />\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"quejas-hero\">\r\n        <Container>\r\n          <h1 className=\"quejas-hero__title\">Buzón de Quejas y Sugerencias</h1>\r\n          <p className=\"quejas-hero__description\">\r\n            Tu opinión es muy importante para nosotros. Ayúdanos a mejorar nuestros servicios compartiendo\r\n            tu experiencia, sugerencias o inquietudes. Respondemos todos los mensajes en máximo 48 horas hábiles.\r\n          </p>\r\n        </Container>\r\n      </section>\r\n\r\n      {/* Content Section */}\r\n      <section className=\"quejas-content\">\r\n        <Container>\r\n          <Row>\r\n            {/* Form Column */}\r\n            <Col lg={8}>\r\n              <h3 className=\"quejas-form__title\">Comparte tu Experiencia</h3>\r\n              <p className=\"quejas-form__text\">\r\n                Valoramos tu retroalimentación. Completa el formulario y nos pondremos en contacto\r\n                contigo a la brevedad para atender tu solicitud.\r\n              </p>\r\n\r\n              <Form onSubmit={handleSubmit} aria-label=\"Formulario de quejas y sugerencias\">\r\n                {submitStatus === 'success' && (\r\n                  <ErrorMessage\r\n                    type=\"success\"\r\n                    message=\"¡Formulario enviado correctamente! Nos pondremos en contacto contigo pronto.\"\r\n                    className=\"mb-3\"\r\n                  />\r\n                )}\r\n                {submitStatus === 'error' && (\r\n                  <ErrorMessage\r\n                    type=\"error\"\r\n                    message=\"Error al enviar el formulario. Por favor intenta nuevamente o contáctanos directamente.\"\r\n                    className=\"mb-3\"\r\n                  />\r\n                )}\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"quejas-tipo\">\r\n                  <Form.Label className=\"quejas-form__label\">Tipo de Mensaje</Form.Label>\r\n                  <div role=\"group\" aria-label=\"Seleccione el tipo de mensaje\">\r\n                    <Form.Check\r\n                      inline\r\n                      type=\"radio\"\r\n                      label=\"Sugerencia\"\r\n                      name=\"tipo\"\r\n                      value=\"sugerencia\"\r\n                      checked={formData.tipo === 'sugerencia'}\r\n                      onChange={handleChange}\r\n                      disabled={isSubmitting}\r\n                      id=\"tipo-sugerencia\"\r\n                      aria-label=\"Sugerencia\"\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      type=\"radio\"\r\n                      label=\"Queja\"\r\n                      name=\"tipo\"\r\n                      value=\"queja\"\r\n                      checked={formData.tipo === 'queja'}\r\n                      onChange={handleChange}\r\n                      disabled={isSubmitting}\r\n                      id=\"tipo-queja\"\r\n                      aria-label=\"Queja\"\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      type=\"radio\"\r\n                      label=\"Felicitación\"\r\n                      name=\"tipo\"\r\n                      value=\"felicitacion\"\r\n                      checked={formData.tipo === 'felicitacion'}\r\n                      onChange={handleChange}\r\n                      disabled={isSubmitting}\r\n                      id=\"tipo-felicitacion\"\r\n                      aria-label=\"Felicitación\"\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"quejas-nombre\">\r\n                      <Form.Label className=\"quejas-form__label\">\r\n                        Nombre Completo <span aria-label=\"campo requerido\">*</span>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        className=\"quejas-form__input\"\r\n                        type=\"text\"\r\n                        name=\"nombre\"\r\n                        value={formData.nombre}\r\n                        onChange={handleChange}\r\n                        required\r\n                        disabled={isSubmitting}\r\n                        aria-required=\"true\"\r\n                        aria-label=\"Ingrese su nombre completo\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"quejas-telefono\">\r\n                      <Form.Label className=\"quejas-form__label\">Teléfono</Form.Label>\r\n                      <Form.Control\r\n                        className=\"quejas-form__input\"\r\n                        type=\"tel\"\r\n                        name=\"telefono\"\r\n                        value={formData.telefono}\r\n                        onChange={handleChange}\r\n                        disabled={isSubmitting}\r\n                        aria-label=\"Ingrese su número de teléfono (opcional)\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"quejas-email\">\r\n                  <Form.Label className=\"quejas-form__label\">\r\n                    Email <span aria-label=\"campo requerido\">*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    className=\"quejas-form__input\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                    disabled={isSubmitting}\r\n                    aria-required=\"true\"\r\n                    aria-label=\"Ingrese su correo electrónico\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"quejas-asunto\">\r\n                  <Form.Label className=\"quejas-form__label\">\r\n                    Asunto <span aria-label=\"campo requerido\">*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    className=\"quejas-form__input\"\r\n                    type=\"text\"\r\n                    name=\"asunto\"\r\n                    value={formData.asunto}\r\n                    onChange={handleChange}\r\n                    required\r\n                    disabled={isSubmitting}\r\n                    aria-required=\"true\"\r\n                    aria-label=\"Ingrese el asunto de su mensaje\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4\" controlId=\"quejas-mensaje\">\r\n                  <Form.Label className=\"quejas-form__label\">\r\n                    Mensaje <span aria-label=\"campo requerido\">*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    className=\"quejas-form__input\"\r\n                    as=\"textarea\"\r\n                    rows={6}\r\n                    name=\"mensaje\"\r\n                    value={formData.mensaje}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Describe tu experiencia, sugerencia o queja...\"\r\n                    required\r\n                    disabled={isSubmitting}\r\n                    aria-required=\"true\"\r\n                    aria-label=\"Ingrese su mensaje detallado\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <div className=\"text-center\">\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    size=\"lg\"\r\n                    disabled={isSubmitting}\r\n                    aria-label=\"Enviar formulario de quejas y sugerencias\"\r\n                  >\r\n                    {isSubmitting ? 'Enviando...' : 'Enviar Mensaje'}\r\n                  </Button>\r\n                  {isSubmitting && (\r\n                    <div className=\"mt-2\">\r\n                      <LoadingSpinner message=\"Enviando mensaje...\" size=\"sm\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Form>\r\n            </Col>\r\n\r\n            {/* Info Column */}\r\n            <Col lg={4}>\r\n              <div className=\"quejas-info\">\r\n                <h3 className=\"quejas-info__title\">¿Por Qué es Importante tu Opinión?</h3>\r\n\r\n                <div className=\"quejas-info__item\">\r\n                  <div className=\"quejas-info__icon\" aria-hidden=\"true\">📈</div>\r\n                  <p className=\"quejas-info__text\">Nos ayuda a mejorar continuamente nuestros servicios</p>\r\n                </div>\r\n\r\n                <div className=\"quejas-info__item\">\r\n                  <div className=\"quejas-info__icon\" aria-hidden=\"true\">🎯</div>\r\n                  <p className=\"quejas-info__text\">Identificamos áreas de oportunidad</p>\r\n                </div>\r\n\r\n                <div className=\"quejas-info__item\">\r\n                  <div className=\"quejas-info__icon\" aria-hidden=\"true\">🤝</div>\r\n                  <p className=\"quejas-info__text\">Fortalece nuestra relación contigo</p>\r\n                </div>\r\n\r\n                <hr className=\"quejas-info__divider\" />\r\n\r\n                <h4 className=\"quejas-info__subtitle\">Tiempo de Respuesta</h4>\r\n                <p className=\"quejas-info__description\">\r\n                  Respondemos todas las quejas y sugerencias en un plazo máximo de\r\n                  <strong> 48 horas hábiles</strong>.\r\n                </p>\r\n\r\n                <h4 className=\"quejas-info__subtitle\">Confidencialidad</h4>\r\n                <p className=\"quejas-info__description\">\r\n                  Toda la información proporcionada es tratada de manera confidencial\r\n                  de acuerdo a nuestra política de privacidad.\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuejasSugerencias;\r\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n"],"names":["QuejasSugerencias","formData","setFormData","useState","tipo","nombre","email","telefono","asunto","mensaje","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleChange","e","name","value","target","_objectSpread","_jsxs","className","children","_jsx","SEO","seoConfig","quejasSugerencias","Container","Row","Col","lg","Form","onSubmit","async","preventDefault","serviceID","templateID","publicKey","templateParams","to_email","tipo_mensaje","from_name","from_email","subject","message","reply_to","emailjs","window","gtag","error","console","ErrorMessage","type","Group","controlId","Label","role","Check","inline","label","checked","onChange","disabled","id","md","Control","required","as","rows","placeholder","Button","variant","size","LoadingSpinner","EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","setItem","remove","removeItem","buildOptions","options","toString","sendPost","url","data","headers","response","fetch","method","body","responseStatus","ok","validateParams","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","_options$list","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","init","opts","blockList","limitRate","send","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","append"],"sourceRoot":""}