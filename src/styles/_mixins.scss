// ============================================
// MIXINS SCSS - CREATIVOS ESPACIOS
// ============================================

@import './variables';

// Responsive Breakpoints
// Uso: @include respond-to(md) { ... }
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  }
  @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  }
  @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
  @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
  @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xxl) {
      @content;
    }
  }
}

// Flexbox Center
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Flexbox Between
@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Flexbox Column
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Absolute Center
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Transition
@mixin transition($property: all, $duration: $transition-base, $timing: ease) {
  transition: $property $duration $timing;
}

// Box Shadow
@mixin box-shadow($shadow: $shadow-md) {
  box-shadow: $shadow;
}

// Button Reset
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  outline: none;
}

// Truncate Text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Line Clamp
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Hover Effect
@mixin hover-lift($translateY: -5px, $shadow: $shadow-lg) {
  transition: transform $transition-base, box-shadow $transition-base;

  &:hover {
    transform: translateY($translateY);
    box-shadow: $shadow;
  }
}

// Image Cover
@mixin image-cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

// Gradient Background
@mixin gradient-bg($color1, $color2, $direction: 135deg) {
  background: linear-gradient($direction, $color1 0%, $color2 100%);
}

// Card Style
@mixin card($padding: $spacing-lg, $radius: $border-radius-lg, $shadow: $shadow-md) {
  padding: $padding;
  border-radius: $radius;
  box-shadow: $shadow;
  background: $color-blanco;
}

// Overlay
@mixin overlay($color: rgba(0, 0, 0, 0.5)) {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: $color;
    z-index: 1;
  }
}

// Section Padding
@mixin section-padding {
  padding: $spacing-4xl 0;

  @media (max-width: $breakpoint-md) {
    padding: $spacing-3xl 0;
  }

  @media (max-width: $breakpoint-sm) {
    padding: $spacing-2xl 0;
  }
}

// Container Max Width
@mixin container-custom($max-width: 1200px) {
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-md;
}

// Button Style
@mixin button-style($bg-color: $color-calipso, $text-color: $color-blanco) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  padding: $spacing-sm $spacing-lg;
  border-radius: $border-radius-md;
  font-weight: $font-weight-semibold;
  cursor: pointer;
  transition: background-color $transition-base, transform $transition-fast;

  &:hover {
    background-color: darken($bg-color, 10%);
    transform: translateY(-2px);
  }

  &:active {
    transform: translateY(0);
  }
}

// Grid Auto Fit
@mixin grid-auto-fit($min-width: 250px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

// Aspect Ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  padding-bottom: percentage($height / $width);
  height: 0;
  overflow: hidden;

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Visually Hidden (for accessibility)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
